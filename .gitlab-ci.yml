image: pathmotion/composer-php-7.2:latest

stages:
  - build
  - validate
  - test


.cache: &global_cache
    paths:
        - .env
        - vendor/
        - composer.lock
    policy: pull-push


#########
# BUILD #
#########

# Build and cache project dependancies
build:
  stage: build
  cache:
      <<: *global_cache
  script:
      - composer install --ignore-platform-reqs --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
      - composer info
      - ./vendor/bin/phpunit --version
  tags:
    - gcp-small-runner-prod

#############
# END BUILD #
#############

############
# VALIDATE #
############
# Check code standards application (PSR-1, PSR-2...)
code-style:
  stage: validate
  cache:
      <<: *global_cache
  script:
    ./vendor/bin/php-cs-fixer fix ./lib -vvv --dry-run
  allow_failure: true
  tags:
    - gcp-small-runner-prod

# Looks for dependancies known vulnerabilities
code-security:
  stage: validate
  cache:
      <<: *global_cache
  before_script: 
    - curl -L https://github.com/fabpot/local-php-security-checker/releases/download/v1.2.0/local-php-security-checker_1.2.0_linux_386 --output /usr/local/bin/local-php-security-checker
    - chmod a+x /usr/local/bin/local-php-security-checker
  script:
    - /usr/local/bin/local-php-security-checker
  tags:
    - gcp-small-runner-prod

# Looks for typing and syntax errors
stan:
  stage: validate
  cache: 
      <<: *global_cache  
  script:
    - ./vendor/bin/phpstan analyse lib/ --level 2
  tags:
    - gcp-small-runner-prod

# Check that the different layers of the project are independant
#deptrac:
#  stage: validate
#  cache:
#      <<: *global_cache
#  before_script:
#    - curl -L https://github.com/qossmic/deptrac/releases/download/0.15.2/deptrac.phar --output ./deptrac.phar
#  script:
#    - php deptrac.phar analyse
#  tags:
#    - gcp-small-runner-prod

################
# END VALIDATE #
################

########
# TEST #
########
# Unit testing
phpunit:
  stage: test
  cache:
      <<: *global_cache
  script:
    - ./vendor/bin/phpunit -c tests/unit/phpunit.xml --testsuite unit --log-junit=tests/unit/test-reports/_coverage/junit.xml
  allow_failure: false
  artifacts:
    when: always
    reports:
      junit: tests/unit/test-reports/_coverage/junit.xml
    paths:
      - test/_report/infection.log
  tags:
    - gcp-small-runner-prod

# Unit tests mutation
infection:
  stage: test
  cache:
      <<: *global_cache
  before_script:
    - curl -L https://github.com/infection/infection/releases/download/0.15.0/infection.phar --output infection.phar
    - curl -L https://github.com/infection/infection/releases/download/0.15.0/infection.phar.asc --output infection.phar.asc
    - curl -L https://schema.phpunit.de/6.2/phpunit.xsd --output tests/unit/phpunit.xsd -k
    - chmod +x infection.phar
  script:
    - ./vendor/bin/phpunit -c tests/unit/phpunit.xml --testsuite unit
    - ./infection.phar --threads=4
  allow_failure: false
  artifacts:
    paths:
      - test/_report/infection.log
    expire_in: 1 week
  tags:
    - gcp-small-runner-prod

############
# END TEST #
############