<?php
/**
 * HiPay Fullservice SDK PHP
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Apache 2.0 Licence
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * @copyright      Copyright (c) 2016 - HiPay
 * @license        http://www.apache.org/licenses/LICENSE-2.0 Apache 2.0 Licence
 *
 */

namespace HiPay\Fullservice\Gateway\Model;

use HiPay\Fullservice\Model\AbstractModel;

/**
 * 3d secure model
 *
 * Result of the 3-D Secure Authentication.
 * Include enrollment and authentication status
 *
 * @see \HiPay\Fullservice\Enum\Transaction\ThreeDSecureStatus
 *
 * @package HiPay\Fullservice
 * @author Kassim Belghait <kassim@sirateck.com>
 * @copyright Copyright (c) 2016 - HiPay
 * @license http://www.apache.org/licenses/LICENSE-2.0 Apache 2.0 License
 * @link https://github.com/hipay/hipay-fullservice-sdk-php
 * @api
 */
class ThreeDSecure extends AbstractModel
{
    /**
     * ThreeDSecure constructor.
     * @param int $eci
     * @param string $enrollmentStatus
     * @param string $enrollmentMessage
     * @param string $authenticationStatus
     * @param string $authenticationMessage
     * @param string $authenticationToken
     * @param string $xid
     */
    public function __construct(
        $eci,
        $enrollmentStatus,
        $enrollmentMessage,
        $authenticationStatus,
        $authenticationMessage,
        $authenticationToken,
        $xid
    ) {
        $this->_eci = $eci;
        $this->_enrollmentStatus = $enrollmentStatus;
        $this->_enrollmentMessage = $enrollmentMessage;
        $this->_authenticationStatus = $authenticationStatus;
        $this->_authenticationMessage = $authenticationMessage;
        $this->_authenticationToken = $authenticationToken;
        $this->_xid = $xid;
    }

    /**
     * @var int $_eci The 3-D Secure (3DS) electronic commerce indicator.
     */
    protected $_eci;

    /**
     * @var string $_enrollmentStatus The enrollment status.
     * @see \HiPay\Fullservice\Enum\Transaction\ThreeDSecureStatus
     */
    protected $_enrollmentStatus;

    /**
     * @var string $_enrollmentMessage The enrollment message
     */
    protected $_enrollmentMessage;

    /**
     * This field is only included if payment authentication was attempted and a value was received.
     *
     * @var string $_authenticationStatus The authentication status
     * @see \HiPay\Fullservice\Enum\Transaction\ThreeDSecureStatus
     */
    protected $_authenticationStatus;

    /**
     * This field is only included if payment authentication was attempted and a value was received.
     * @var string $_authenticationMessage Authentication message
     */
    protected $_authenticationMessage;

    /**
     * This is a value generated by the card issuer as a token
     * to prove that the cardholder was successfully authenticated.
     *
     * @var string $_authenticationToken Authentication token
     */
    protected $_authenticationToken;

    /**
     * A unique transaction identifier that is generated by the payment server on behalf of the merchant
     * to identify the 3-D Secure transaction
     *
     * @var string $_xid Unique transaction identifier
     */
    protected $_xid;

    /**
     * @return int
     */
    public function getEci()
    {
        return $this->_eci;
    }

    /**
     * @return string
     */
    public function getEnrollmentStatus()
    {
        return $this->_enrollmentStatus;
    }

    /**
     * @return string
     */
    public function getEnrollmentMessage()
    {
        return $this->_enrollmentMessage;
    }

    /**
     * @return string
     */
    public function getAuthenticationStatus()
    {
        return $this->_authenticationStatus;
    }

    /**
     * @return string
     */
    public function getAuthenticationMessage()
    {
        return $this->_authenticationMessage;
    }

    /**
     * @return string
     */
    public function getAuthenticationToken()
    {
        return $this->_authenticationToken;
    }

    /**
     * @return string
     */
    public function getXid()
    {
        return $this->_xid;
    }
}
