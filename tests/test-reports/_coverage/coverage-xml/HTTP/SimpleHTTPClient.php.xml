<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="SimpleHTTPClient.php" path="/HTTP">
    <totals>
      <lines total="181" comments="60" code="121" executable="62" executed="53" percent="85.48"/>
      <methods count="2" tested="1" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="HiPay\Fullservice\HTTP\SimpleHTTPClient" start="38" executable="62" executed="53" crap="24.62">
      <package full="HiPay" name="HiPay" sub="" category="HiPay"/>
      <namespace name="HiPay\Fullservice\HTTP"/>
      <method name="doRequest" signature="doRequest($method, $endpoint, array $params = array(), $isVault = false, $isData = false)" start="53" end="168" crap="23.63" executable="60" executed="51" coverage="85"/>
      <method name="createHttpClient" signature="createHttpClient()" start="177" end="180" crap="1" executable="2" executed="2" coverage="100"/>
    </class>
    <coverage>
      <line nr="55">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCannotBeExecutedFromRequiredInvalidMethod"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCannotBeExecutedFromInvalidHTTPMethod"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCannotBeExecutedFromInvalidEndpoint"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="56">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCannotBeExecutedFromInvalidHTTPMethod"/>
      </line>
      <line nr="58">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCannotBeExecutedFromRequiredInvalidMethod"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCannotBeExecutedFromInvalidEndpoint"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="59">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCannotBeExecutedFromRequiredInvalidMethod"/>
      </line>
      <line nr="62">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCannotBeExecutedFromInvalidEndpoint"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="63">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCannotBeExecutedFromInvalidEndpoint"/>
      </line>
      <line nr="66">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="68">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="71">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="74">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="75">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="77">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="78">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
      </line>
      <line nr="82">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="85">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="92">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="96">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="97">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="98">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="99">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="100">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="102">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="103">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="104">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="105">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="106">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="109">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="115">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="116">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="117">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="121">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="124">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
      </line>
      <line nr="127">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="129">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="130">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
      </line>
      <line nr="131">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
      </line>
      <line nr="132">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
      </line>
      <line nr="141">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="142">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="145">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="147">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="148">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testRequestCanBeExecutedWithProxy"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
      </line>
      <line nr="151">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="153">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="155">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="156">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="158">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="159">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="160">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="162">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
      </line>
      <line nr="167">
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
      </line>
      <line nr="179">
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testCanBeConstructUsingClientProvider"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testGetDataIdForOrder"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testGetDataIdForHPayment"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testGetOrderData"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testGetHPaymentData"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCanBeConstructUsingConfiguration"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="180">
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testCanBeConstructUsingClientProvider"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testGetDataIdForOrder"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testGetDataIdForHPayment"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testGetOrderData"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Gateway\PIDataClient\PIDataClientTest::testGetHPaymentData"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCanBeConstructUsingConfiguration"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testCurlExceptionIsRaisedForNetworkFailure"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testApiErrorExceptionIsRaisedForParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpErrorExceptionIsRaisedForNotParsableHttpResponse"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessVaultRequest"/>
        <covered by="Unit\HiPay\Tests\Fullservice\HTTP\SimpleHTTPClientTest::testHttpSuccessApiRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * HiPay Fullservice SDK PHP</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * NOTICE OF LICENSE</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * This source file is subject to the Apache 2.0 Licence</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * that is bundled with this package in the file LICENSE.md.</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * It is also available through the world-wide-web at this URL:</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * http://www.apache.org/licenses/LICENSE-2.0</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * @copyright      Copyright (c) 2019 - HiPay</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * @license        http://www.apache.org/licenses/LICENSE-2.0 Apache 2.0 Licence</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">HTTP</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ApiErrorException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">CurlException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">HttpErrorException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Gateway</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Client</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">GatewayClient</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">HTTP</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Response</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AbstractResponse</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">HTTP</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Response</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26"/>
      <line no="27">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT"> * Simple HTTP client</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT"> * @category    HiPay</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT"> * @package     HiPay\Fullservice</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT"> * @author      HiPay &lt;support.tpp@hipay.com&gt;</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT"> * @copyright   Copyright (c) 2019 - HiPay</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT"> * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache 2.0 License</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT"> * @link        https://github.com/hipay/hipay-fullservice-sdk-php</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT"> * @api</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="38">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SimpleHTTPClient</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ClientProvider</token>
      </line>
      <line no="39">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * {@inheritDoc}</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @see \HiPay\Fullservice\HTTP\ClientProvider::doRequest()</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     * @param string $method</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     * @param string $endpoint</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * @param array&lt;string, mixed&gt; $params</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * @param bool $isVault</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     * @param bool $isData</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * @return AbstractResponse</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">doRequest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$endpoint</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isVault</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"HTTP METHOD must a string and a valid HTTP METHOD Value"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validateHttpMethod</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">HTTP METHOD \"</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">\" doesn't exist</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$endpoint</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$endpoint</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Endpoint must be a string and a valid api endpoint"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$credentials</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getApiUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">':'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getApiPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67"/>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$endpoint</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">GatewayClient</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ENDPOINT_HOSTED_PAYMENT_PAGE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$url</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getApiEndpointV2</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$url</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getApiEndpoint</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="73"/>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$timeout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCurlTimeout</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$connectTimeout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCurlConnectTimeout</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76"/>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isVault</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$url</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getSecureVaultEndpoint</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="80"/>
      <line no="81"/>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$userAgent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$_SERVER</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'HTTP_USER_AGENT'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_SERVER</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'HTTP_USER_AGENT'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'HiPayFullservice/1.0 (SDK PHP)'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83"/>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Handling data API configuration</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isData</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$url</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDataApiEndpoint</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$timeout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">3</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$connectTimeout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">3</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$userAgent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDataApiHttpUserAgent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$finalUrl</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$url</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$endpoint</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93"/>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// set appropriate options</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CURLOPT_URL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$finalUrl</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CURLOPT_USERPWD</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$credentials</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CURLOPT_HTTPHEADER</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Accept: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getApiHTTPHeaderAccept</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'User-Agent: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userAgent</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CURLOPT_RETURNTRANSFER</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CURLOPT_FAILONERROR</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CURLOPT_HEADER</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CURLOPT_TIMEOUT</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$timeout</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">CURLOPT_CONNECTTIMEOUT</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$connectTimeout</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108"/>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isData</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_HTTPHEADER</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'X-Who-Api: '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDataApiHttpUserAgent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">            </token>
        <token name="T_UNSET">unset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_USERPWD</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="113"/>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// add post parameters</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strtolower</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'post'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_POST</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$isData</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_HTTPHEADER</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type: application/json'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_POSTFIELDS</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_POSTFIELDS</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">http_build_query</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_POST</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$proxyConfiguration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getConfiguration</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getProxy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="128"/>
      <line no="129">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$proxyConfiguration</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_PROXY</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$proxyConfiguration</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"host"</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_PROXYPORT</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$proxyConfiguration</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"port"</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">CURLOPT_PROXYUSERPWD</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$proxyConfiguration</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"user"</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">":"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$proxyConfiguration</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"password"</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="134"/>
      <line no="135">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="136">
        <token name="T_DOC_COMMENT">         * Send a new request</token>
      </line>
      <line no="137">
        <token name="T_DOC_COMMENT">         * $method can be any valid HTTP METHOD (GET, POST etc ...)</token>
      </line>
      <line no="138">
        <token name="T_DOC_COMMENT">         * $uri The url/endpoint to request</token>
      </line>
      <line no="139">
        <token name="T_DOC_COMMENT">         * $options Needed configuration</token>
      </line>
      <line no="140">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">curl_setopt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_httpClient</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$option</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="144"/>
      <line no="145">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">curl_exec</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_httpClient</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// execute the given cURL session</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$isData</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CurlException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">curl_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_httpClient</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">curl_errno</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_httpClient</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="150"/>
      <line no="151">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="152"/>
      <line no="153">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_STRING">curl_getinfo</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_httpClient</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CURLINFO_HTTP_CODE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="154"/>
      <line no="155">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">floor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIV">/</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">100</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_EQUAL">!=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$isData</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$httpResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_decode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="157"/>
      <line no="158">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_object</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$httpResponse</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$httpResponse</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$httpResponse</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">code</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$description</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$httpResponse</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">description</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$httpResponse</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">description</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApiErrorException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$httpResponse</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$httpResponse</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">code</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$description</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HttpErrorException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="165"/>
      <line no="166">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Return a simple response object</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$status</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json; encoding=UTF-8'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="169"/>
      <line no="170">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="171">
        <token name="T_DOC_COMMENT">     * {@inheritDoc}</token>
      </line>
      <line no="172">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="173">
        <token name="T_DOC_COMMENT">     * @see \HiPay\Fullservice\HTTP\ClientProvider::createHttpClient()</token>
      </line>
      <line no="174">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="175">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="176">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createHttpClient</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_httpClient</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">curl_init</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="181">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="182"/>
    </source>
  </file>
</phpunit>
