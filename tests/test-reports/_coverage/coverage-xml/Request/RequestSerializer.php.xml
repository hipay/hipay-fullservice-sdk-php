<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="RequestSerializer.php" path="/Request">
    <totals>
      <lines total="108" comments="63" code="45" executable="17" executed="17" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="HiPay\Fullservice\Request\RequestSerializer" start="34" executable="17" executed="17" crap="12">
      <package full="HiPay" name="HiPay" sub="" category=""/>
      <namespace name="HiPay\Fullservice\Request"/>
      <method name="__construct" signature="__construct(AbstractRequest $request)" start="46" end="49" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="toJson" signature="toJson($pretty = false)" start="57" end="60" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="toArray" signature="toArray()" start="66" end="74" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="prepareParams" signature="prepareParams($object, &amp;$params)" start="86" end="107" crap="8" executable="11" executed="11" coverage="100"/>
    </class>
    <coverage>
      <line nr="48">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testCanBeConstructUsingAbstractRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="49">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testCanBeConstructUsingAbstractRequest"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="59">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
      </line>
      <line nr="68">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="71">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="73">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="89">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="95">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="97">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="98">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="99">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="100">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
      </line>
      <line nr="101">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="102">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
      </line>
      <line nr="103">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="104">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
      <line nr="107">
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToArray"/>
        <covered by="Unit\HiPay\Tests\Fullservice\Request\RequestSerializerTest::testRequestCanBeRetrieveToJson"/>
        <covered by="Integration\HiPay\Tests\Fullservice\GatewayTest::testNewOrderAlreadyPaid"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * HiPay Fullservice SDK PHP</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * NOTICE OF LICENSE</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * This source file is subject to the Apache 2.0 Licence</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * that is bundled with this package in the file LICENSE.md.</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * It is also available through the world-wide-web at this URL:</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * http://www.apache.org/licenses/LICENSE-2.0</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * @copyright      Copyright (c) 2016 - HiPay</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * @license        http://www.apache.org/licenses/LICENSE-2.0 Apache 2.0 Licence</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Model</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AbstractModel</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> * Serialize Request object</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT"> * This class is used to serialize request objects</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT"> * It can return request object to array or Json format</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT"> * @package HiPay\Fullservice</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT"> * @author Kassim Belghait &lt;kassim@sirateck.com&gt;</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT"> * @copyright Copyright (c) 2016 - HiPay</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT"> * @license http://www.apache.org/licenses/LICENSE-2.0 Apache 2.0 License</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT"> * @link https://github.com/hipay/hipay-fullservice-sdk-php</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT"> * @api</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="34">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RequestSerializer</token>
      </line>
      <line no="35">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     * @var AbstractRequest $_request Request object</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * Construct a new Serializer</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @param AbstractRequest $request</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">AbstractRequest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="50"/>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     * Returns data string as Json</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     * @param bool $pretty If true, display with pretty format (const: JSON_PRETTY_PRINT)</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     * @return string|false Return result of json_encode function</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">toJson</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$pretty</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">toArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$pretty</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JSON_PRETTY_PRINT</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     * Returns data array with only scalar values</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     * @return array&lt;string, mixed&gt; Hashed array with key/value pairs (property/value)</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">toArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//prepare an array of scalar properties</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">prepareParams</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     * Populate $_params array with data to send</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">     * If one of properties is type of AbstractRequest</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     * This method will be called recursively</token>
      </line>
      <line no="81">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     * @param AbstractRequest $object Object source</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     * @param array&lt;string, mixed&gt; $params Passed by reference</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">prepareParams</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$object</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AMPERSAND">&amp;</token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Get all readable object properties</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$properties</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_object_vars</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$object</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90"/>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="92">
        <token name="T_DOC_COMMENT">         * For each property, if it is instance of AbstractRequest, recursive function called</token>
      </line>
      <line no="93">
        <token name="T_DOC_COMMENT">         * Else if value of property is scalar we assign it</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$properties</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$p</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="96"/>
      <line no="97">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_scalar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$p</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$p</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_object</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AbstractModel</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$p</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">toJson</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_object</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AbstractRequest</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">prepareParams</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="108">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="109"/>
    </source>
  </file>
</phpunit>
