<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="AbstractMapper.php" path="/Mapper">
    <totals>
      <lines total="121" comments="72" code="49" executable="11" executed="11" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="HiPay\Fullservice\Mapper\AbstractMapper" start="33" executable="11" executed="11" crap="8">
      <package full="HiPay" name="HiPay" sub="" category=""/>
      <namespace name="HiPay\Fullservice\Mapper"/>
      <method name="__construct" signature="__construct(array $source)" start="55" end="64" crap="2" executable="5" executed="5" coverage="100"/>
      <method name="getModelObjectMapped" signature="getModelObjectMapped()" start="73" end="78" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="uniformizeSourceKeys" signature="uniformizeSourceKeys()" start="83" end="86" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="_getSource" signature="_getSource()" start="93" end="96" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="mapResponseToModel" signature="mapResponseToModel()" start="107" end="107" crap="1" executable="0" executed="0" coverage="100"/>
      <method name="validate" signature="validate()" start="114" end="114" crap="1" executable="0" executed="0" coverage="100"/>
      <method name="getModelClassName" signature="getModelClassName()" start="120" end="120" crap="1" executable="0" executed="0" coverage="100"/>
    </class>
    <coverage>
      <line nr="58">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Mapper\AbstractMapperTest::testCannotBeConstructWithEmptyArray"/>
        <covered by="HiPay\Tests\Fullservice\Mapper\AbstractMapperTest::testCanConstructUsingValidArgument"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testConstruct"/>
      </line>
      <line nr="59">
        <covered by="HiPay\Tests\Fullservice\Mapper\AbstractMapperTest::testCannotBeConstructWithEmptyArray"/>
      </line>
      <line nr="62">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Mapper\AbstractMapperTest::testCanConstructUsingValidArgument"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testConstruct"/>
      </line>
      <line nr="63">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Mapper\AbstractMapperTest::testCanConstructUsingValidArgument"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testConstruct"/>
      </line>
      <line nr="64">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Mapper\AbstractMapperTest::testCanConstructUsingValidArgument"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testConstruct"/>
      </line>
      <line nr="75">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testMapResponseToModel"/>
      </line>
      <line nr="76">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testMapResponseToModel"/>
      </line>
      <line nr="77">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testMapResponseToModel"/>
      </line>
      <line nr="85">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Mapper\AbstractMapperTest::testCanConstructUsingValidArgument"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testConstruct"/>
      </line>
      <line nr="86">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testConstruct"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Mapper\AbstractMapperTest::testCanConstructUsingValidArgument"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testConstruct"/>
      </line>
      <line nr="95">
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testCallRequestHostedPaymentPage with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestNewOrder with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestMaintenanceOperation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\GatewayClientTest::testRequestTransactionInformation with data set #0"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OperationMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\OrderMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\PersonalInformationMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\SecuritySettingsMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Mapper\TransactionMapperTest::testMapResponseToModel"/>
        <covered by="HiPay\Tests\Fullservice\Gateway\Client\SecureVaultClientTest::testRequestLookupToken"/>
        <covered by="HiPay\Tests\Fullservice\SecureVault\Mapper\PaymentCardTokenMapperTest::testMapResponseToModel"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * HiPay Fullservice SDK PHP</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * NOTICE OF LICENSE</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * This source file is subject to the Apache 2.0 Licence</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * that is bundled with this package in the file LICENSE.md.</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * It is also available through the world-wide-web at this URL:</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * http://www.apache.org/licenses/LICENSE-2.0</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * @copyright      Copyright (c) 2016 - HiPay</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * @license        http://www.apache.org/licenses/LICENSE-2.0 Apache 2.0 Licence</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Mapper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Model</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AbstractModel</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exception</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">LengthException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HiPay</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Fullservice</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Helper</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Convert</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT"> * Abstract Mapper class</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT"> * Map Response Model object</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT"> * @package HiPay\Fullservice</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT"> * @author Kassim Belghait &lt;kassim@sirateck.com&gt;</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT"> * @copyright Copyright (c) 2016 - HiPay</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT"> * @license http://www.apache.org/licenses/LICENSE-2.0 Apache 2.0 License</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT"> * @link https://github.com/hipay/hipay-fullservice-sdk-php</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="33">
        <token name="T_ABSTRACT">abstract</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AbstractMapper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MapperInterface</token>
      </line>
      <line no="34">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     * @var AbstractModel $_modelObject Model object to populate</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_modelObject</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * @var array&lt;string, mixed&gt; $_source Source to parse</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_source</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45"/>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     * Construct a new mapper</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * Assign $source to local protected property $_source</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     * $_source is used in mapResponseToModel method</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     * @param array&lt;string, mixed&gt; $source</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * @throws LengthException Source must contains 1 element at least</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$source</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57"/>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$source</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LengthException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Mapper source must contains 1 element at least."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_source</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$source</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">uniformizeSourceKeys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     * {@inheritDoc}</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     * @see \HiPay\Fullservice\Mapper\MapperInterface::getModelObjectMapped()</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     * @return AbstractModel</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getModelObjectMapped</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">mapResponseToModel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_modelObject</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="79"/>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="81">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">uniformizeSourceKeys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_source</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Convert</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">arrayKeysToCamelCase</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_source</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="87"/>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="89">
        <token name="T_DOC_COMMENT">     * Return source to map</token>
      </line>
      <line no="90">
        <token name="T_DOC_COMMENT">     * @see AbstractMapper:::_construct</token>
      </line>
      <line no="91">
        <token name="T_DOC_COMMENT">     * @return array&lt;string, mixed&gt; Local source</token>
      </line>
      <line no="92">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">_getSource</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_source</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="97"/>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="99">
        <token name="T_DOC_COMMENT">     * Map array response to corresponding model</token>
      </line>
      <line no="100">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="101">
        <token name="T_DOC_COMMENT">     * In this method, you must create a conform model and populate it</token>
      </line>
      <line no="102">
        <token name="T_DOC_COMMENT">     * with $_source array</token>
      </line>
      <line no="103">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="104">
        <token name="T_DOC_COMMENT">     * @throws \Exception</token>
      </line>
      <line no="105">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="106">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ABSTRACT">abstract</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mapResponseToModel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108"/>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="110">
        <token name="T_DOC_COMMENT">     * Validate source data</token>
      </line>
      <line no="111">
        <token name="T_DOC_COMMENT">     * @throws \Exception</token>
      </line>
      <line no="112">
        <token name="T_DOC_COMMENT">     * @return AbstractMapper</token>
      </line>
      <line no="113">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ABSTRACT">abstract</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">validate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115"/>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="117">
        <token name="T_DOC_COMMENT">     * Model Class name to map</token>
      </line>
      <line no="118">
        <token name="T_DOC_COMMENT">     * @return string Name of the class to return mapped</token>
      </line>
      <line no="119">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ABSTRACT">abstract</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getModelClassName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="122"/>
    </source>
  </file>
</phpunit>
